# EMBEDDED SERVER CONFIGURATION (ServerProperties)
#server.port=8080
server.port=8585
server.context-path=/WebDemo

# LOGGING
logging.level.root=INFO
logging.level.org.springframework.web=INFO
logging.level.com.java=DEBUG
logging.level.org.springframework.transaction.jta=DEBUG
#logging.pattern.console=[%d{yyyy-MM-dd HH:mm:ss.SSS}] - [%-20thread] %-5level %logger{36} - %msg%n
logging.pattern.console=[%d{yyyy-MM-dd HH:mm:ss.SSS}] ${PID:- } - [%thread] %-5level [%logger] - %msg%n

# SPRING MVC (WebMvcProperties)
#spring.mvc.static-path-pattern=/**
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp

# SPRING RESOURCES HANDLING (ResourceProperties)
#spring.resources.add-mappings=true
#spring.resources.cache-period= # Cache period for the resources served by the resource handler, in seconds.
#spring.resources.chain.cache=true # Enable caching in the Resource chain.
#spring.resources.chain.enabled= # Enable the Spring Resource Handling chain. Disabled by default unless at least one strategy has been enabled.
#spring.resources.chain.gzipped=false # Enable resolution of already gzipped resources.
#spring.resources.chain.html-application-cache=false # Enable HTML5 application cache manifest rewriting.
#spring.resources.chain.strategy.content.enabled=false # Enable the content Version Strategy.
#spring.resources.chain.strategy.content.paths=/** # Comma-separated list of patterns to apply to the Version Strategy.
#spring.resources.chain.strategy.fixed.enabled=false # Enable the fixed Version Strategy.
#spring.resources.chain.strategy.fixed.paths=/** # Comma-separated list of patterns to apply to the Version Strategy.
#spring.resources.chain.strategy.fixed.version= # Version string to use for the Version Strategy.
#spring.resources.static-locations=classpath:/resources/

# DAO (PersistenceExceptionTranslationAutoConfiguration)

# Enable the PersistenceExceptionTranslationPostProcessor.
spring.dao.exceptiontranslation.enabled=true

# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
# Do not stop if an error occurs while initializing the database.
spring.datasource.continue-on-error=false
# Data (DML) script resource reference.
spring.datasource.data=classpath:db/sql/data-h2.sql
#spring.datasource.data-username= # User of the database to execute DML scripts (if different).
#spring.datasource.data-password= # Password of the database to execute DML scripts (if different).
#spring.datasource.dbcp.*= # Commons DBCP specific settings
#spring.datasource.dbcp2.*= # Commons DBCP2 specific settings
# Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.
spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.generate-unique-name=false # Generate a random datasource name.
#spring.datasource.hikari.*= # Hikari specific settings
# Populate the database using 'data.sql'.
spring.datasource.initialize=false
#spring.datasource.jmx-enabled=false # Enable JMX support (if provided by the underlying pool).
#spring.datasource.jndi-name= # JNDI location of the datasource. Class, url, username & password are ignored when set.
# Name of the datasource.
spring.datasource.name=dynamicDataSource
# Login password of the database.
spring.datasource.password=
 # Platform to use in the schema resource (schema-${platform}.sql).
spring.datasource.platform=h2
#defaul schema-{platform}.sql
spring.datasource.schema=classpath:db/sql/schema-h2.sql
#spring.datasource.schema-username= # User of the database to execute DDL scripts (if different).
#spring.datasource.schema-password= # Password of the database to execute DDL scripts (if different).
# Statement separator in SQL initialization scripts. 
spring.datasource.separator=;
#spring.datasource.sql-script-encoding= # SQL scripts encoding.
#spring.datasource.tomcat.*= # Tomcat datasource specific settings
#spring.datasource.type= # Fully qualified name of the connection pool implementation to use. By default, it is auto-detected from the classpath.
# JDBC url of the database.
#spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=TRUE
#spring.datasource.username=sa

# H2 Web Console (H2ConsoleProperties)
 # Enable the console.
spring.h2.console.enabled=true
 # Path at which the console will be available.
spring.h2.console.path=/h2-console
#spring.h2.console.settings.trace=false # Enable trace output.
#spring.h2.console.settings.web-allow-others=false # Enable remote access.

# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
spring.data.jpa.repositories.enabled=false
#spring.jpa.database= # Target database to operate on, auto-detected by default. Can be alternatively set using the "databasePlatform" property.
#spring.jpa.database-platform= # Name of the target database to operate on, auto-detected by default. Can be alternatively set using the "Database" enum.
#spring.jpa.generate-ddl=false # Initialize the schema on startup.
# DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. Default to "create-drop" when using an embedded database, "none" otherwise.
spring.jpa.hibernate.ddl-auto=none
#spring.jpa.hibernate.naming.implicit-strategy= # Hibernate 5 implicit naming strategy fully qualified name.
#spring.jpa.hibernate.naming.physical-strategy= # Hibernate 5 physical naming strategy fully qualified name.
#spring.jpa.hibernate.naming.strategy= # Hibernate 4 naming strategy fully qualified name. Not supported with Hibernate 5.
#spring.jpa.hibernate.use-new-id-generator-mappings= # Use Hibernate's newer IdentifierGenerator for AUTO, TABLE and SEQUENCE.
#spring.jpa.open-in-view=true # Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.
#spring.jpa.properties.*= # Additional native properties to set on the JPA provider.
# Enable logging of SQL statements.
spring.jpa.show-sql=true

#redis
spring.redis.host=localhost
#spring.redis.password=secret
spring.redis.port=6379

